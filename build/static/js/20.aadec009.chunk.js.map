{"version":3,"sources":["pages/Listings.js","components/Typography/PageTitle.js","Services/BookService.js"],"names":["Listings","props","useState","page","setPage","data","setData","useEffect","BookService","getBooks","then","setBooks","books","slice","resultsPerPage","useContext","AuthContext","user","setUser","SearchContext","search","totalResults","length","title","book","setBook","console","log","onAdd","postBook","thumbnailFunc","imageLinks","smallThumbnail","map","i","key","className","src","volumeInfo","alt","titleFunc","job","authors","join","authorsFunc","type","status","publishedDate","onClick","Swal","fire","icon","text","showConfirmButton","setTimeout","description","thumbnail","close","addClick","label","onChange","p","PageTitle","children","fetch","response","json","message","msgBody","msgError","method","body","JSON","stringify","headers","deleteBook","bookID"],"mappings":"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","file":"static/js/20.aadec009.chunk.js","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\nimport { SearchContext } from \"../context/SearchContext\";\r\nimport PageTitle from \"../components/Typography/PageTitle\";\r\nimport BookService from \"../Services/BookService\";\r\nimport Swal from \"sweetalert2\";\r\nimport {\r\n  TableBody,\r\n  TableContainer,\r\n  Table,\r\n  TableHeader,\r\n  TableCell,\r\n  TableRow,\r\n  TableFooter,\r\n  Avatar,\r\n  Badge,\r\n  Pagination,\r\n} from \"@windmill/react-ui\";\r\n\r\nfunction Listings(props) {\r\n  const [page, setPage] = useState(1);\r\n  const [data, setData] = useState([]);\r\n\r\n  // pagination setup\r\n  // pagination change control\r\n  function onPageChange(p) {\r\n    setPage(p);\r\n  }\r\n\r\n  useEffect(() => {\r\n    BookService.getBooks().then((data) => {\r\n      setBooks(data.books);\r\n    });\r\n  }, []);\r\n\r\n  // on page change, load new sliced data\r\n  // here you would make another server request for new data\r\n  useEffect(() => {\r\n    setData(data.slice((page - 1) * resultsPerPage, page * resultsPerPage));\r\n  }, [page]);\r\n\r\n  const { user, setUser } = useContext(AuthContext);\r\n\r\n  const [search, setSearch] = useContext(SearchContext);\r\n\r\n  const resultsPerPage = 15;\r\n  const totalResults = search.length;\r\n\r\n  const [book, setBook] = useState({ title: \"\" });\r\n  const [books, setBooks] = useState([]);\r\n\r\n  const addClick = (data) => {\r\n    Swal.fire({\r\n      icon: \"success\",\r\n      title: \"Book added to your list\",\r\n      text: \"You can view your list at My Page\",\r\n      showConfirmButton: false,\r\n    });\r\n    setTimeout(() => {\r\n      setBook({\r\n        title: data.volumeInfo.title,\r\n        authors: data.volumeInfo.authors.join(\", \"),\r\n        description: data.volumeInfo.description,\r\n        thumbnail: data.volumeInfo.imageLinks.smallThumbnail,\r\n      });\r\n      Swal.close();\r\n    }, 1500);\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(\"new entry: \");\r\n    console.log(book);\r\n    if (book.title !== \"\") {\r\n      onAdd(book);\r\n    }\r\n  }, [book]);\r\n\r\n  const onAdd = () => {\r\n    BookService.postBook(book);\r\n  };\r\n\r\n  const thumbnailFunc = (data) => {\r\n    if (\"imageLinks\" in data) {\r\n      return data.imageLinks.smallThumbnail;\r\n    }\r\n  };\r\n\r\n  const authorsFunc = (data) => {\r\n    if (\"authors\" in data) {\r\n      if (data.authors.join(\", \").length >= 40) {\r\n        return data.authors.join(\", \").slice(0, 40) + \"...\";\r\n      }\r\n      return data.authors.join(\", \");\r\n    }\r\n  };\r\n\r\n  const titleFunc = (data) => {\r\n    if (data.title.length >= 60) {\r\n      return data.title.slice(0, 60) + \"...\";\r\n    }\r\n    return data.title;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <PageTitle>Listings </PageTitle>\r\n\r\n      <TableContainer>\r\n        <Table>\r\n          <TableHeader>\r\n            <tr>\r\n              <TableCell>Book Name</TableCell>\r\n              <TableCell>Author</TableCell>\r\n              <TableCell>Published Date</TableCell>\r\n              <TableCell>Add to list(s)?</TableCell>\r\n            </tr>\r\n          </TableHeader>\r\n          <TableBody>\r\n            {search.map((data, i) => (\r\n              <TableRow key={i}>\r\n                <TableCell>\r\n                  <div className=\"flex items-center text-sm\">\r\n                    <Avatar\r\n                      className=\"hidden mr-3 md:block\"\r\n                      src={thumbnailFunc(data.volumeInfo)}\r\n                      alt=\"\"\r\n                    />\r\n                    <div>\r\n                      <p className=\"font-semibold\">\r\n                        {titleFunc(data.volumeInfo)}\r\n                      </p>\r\n                      <p className=\"text-xs text-gray-600 dark:text-gray-400\">\r\n                        {user.job}\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </TableCell>\r\n                <TableCell>\r\n                  <span className=\"text-sm\">\r\n                    {authorsFunc(data.volumeInfo)}\r\n                  </span>\r\n                </TableCell>\r\n                <TableCell>\r\n                  <Badge type={user.status}>\r\n                    {data.volumeInfo.publishedDate}\r\n                  </Badge>\r\n                </TableCell>\r\n                <TableCell>\r\n                  <button\r\n                    className=\"bg-purple-400 hover:bg-blue-700 text-white font-bold py-1 px-4 rounded-full\"\r\n                    onClick={() => {\r\n                      addClick(data);\r\n                    }}\r\n                  >\r\n                    Add\r\n                  </button>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n        <TableFooter>\r\n          <Pagination\r\n            totalResults={totalResults}\r\n            resultsPerPage={resultsPerPage}\r\n            label=\"Table navigation\"\r\n            onChange={onPageChange}\r\n          />\r\n        </TableFooter>\r\n      </TableContainer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Listings;\r\n","import React from \"react\";\r\n\r\nfunction PageTitle({ children }) {\r\n  return (\r\n    <h1 className=\"my-6 text-2xl font-semibold text-gray-700 dark:text-gray-200\">\r\n      {children}\r\n    </h1>\r\n  );\r\n}\r\n\r\nexport default PageTitle;\r\n","export default {\r\n  getBooks: () => {\r\n    return fetch(\"/user/books\").then((response) => {\r\n      if (response.status != 401) {\r\n        return response.json().then((data) => {\r\n          return data;\r\n        });\r\n      } else return { message: { msgBody: \"Unauthorized\" }, msgError: true };\r\n    });\r\n  },\r\n  postBook: (book) => {\r\n    return fetch(\"/user/book\", {\r\n      method: \"post\",\r\n      body: JSON.stringify(book),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    }).then((response) => {\r\n      if (response.status != 401) {\r\n        return response.json().then((data) => {\r\n          return data;\r\n        });\r\n      } else return { message: { msgBody: \"Unauthorized\" }, msgError: true };\r\n    });\r\n  },\r\n  deleteBook: (bookID) => {\r\n    return fetch(\"/user/test/\" + bookID, {\r\n      method: \"delete\",\r\n    }).then((response) => {\r\n      if (response.status != 401) {\r\n        return response.json().then((data) => {\r\n          return data;\r\n        });\r\n      } else return { message: { msgBody: \"Unauthorized\" }, msgError: true };\r\n    });\r\n  },\r\n};\r\n"],"sourceRoot":""}