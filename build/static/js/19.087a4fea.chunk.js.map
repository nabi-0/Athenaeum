{"version":3,"sources":["pages/Dashboard.js","components/Typography/PageTitle.js","Services/BookService.js"],"names":["Dashboard","props","useState","page","setPage","data","setData","useEffect","BookService","getBooks","then","setBooks","books","slice","resultsPerPage","useContext","AuthContext","user","setUser","SearchContext","search","totalResults","length","title","book","setBook","console","log","onAdd","postBook","thumbnailFunc","imageLinks","smallThumbnail","map","i","key","className","src","volumeInfo","alt","titleFunc","authors","join","authorsFunc","style","width","whiteSpace","description","type","status","publishedDate","onClick","Swal","fire","icon","text","showConfirmButton","setTimeout","thumbnail","close","addClick","label","onChange","p","PageTitle","children","fetch","response","json","message","msgBody","msgError","method","body","JSON","stringify","headers","deleteBook","bookID"],"mappings":"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","file":"static/js/19.087a4fea.chunk.js","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\nimport { SearchContext } from \"../context/SearchContext\";\r\nimport PageTitle from \"../components/Typography/PageTitle\";\r\nimport BookService from \"../Services/BookService\";\r\nimport Swal from \"sweetalert2\";\r\nimport {\r\n  TableBody,\r\n  TableContainer,\r\n  Table,\r\n  TableHeader,\r\n  TableCell,\r\n  TableRow,\r\n  TableFooter,\r\n  Badge,\r\n  Pagination,\r\n} from \"@windmill/react-ui\";\r\n\r\nfunction Dashboard(props) {\r\n  const [page, setPage] = useState(1);\r\n  const [data, setData] = useState([]);\r\n\r\n  // pagination setup\r\n  // pagination change control\r\n  function onPageChange(p) {\r\n    setPage(p);\r\n  }\r\n\r\n  useEffect(() => {\r\n    BookService.getBooks().then((data) => {\r\n      setBooks(data.books);\r\n    });\r\n  }, []);\r\n\r\n  // on page change, load new sliced data\r\n  // here you would make another server request for new data\r\n  useEffect(() => {\r\n    setData(data.slice((page - 1) * resultsPerPage, page * resultsPerPage));\r\n  }, [page]);\r\n\r\n  const { user, setUser } = useContext(AuthContext);\r\n\r\n  const [search, setSearch] = useContext(SearchContext);\r\n\r\n  const resultsPerPage = 15;\r\n  const totalResults = search.length;\r\n\r\n  const [book, setBook] = useState({ title: \"\" });\r\n  const [books, setBooks] = useState([]);\r\n\r\n  const addClick = (data) => {\r\n    Swal.fire({\r\n      icon: \"success\",\r\n      title: \"Book added to your list\",\r\n      text: \"You can view your list at My Page\",\r\n      showConfirmButton: false,\r\n    });\r\n    setTimeout(() => {\r\n      setBook({\r\n        title: data.volumeInfo.title,\r\n        authors: data.volumeInfo.authors.join(\", \"),\r\n        description: data.volumeInfo.description,\r\n        thumbnail: data.volumeInfo.imageLinks.smallThumbnail,\r\n      });\r\n      Swal.close();\r\n    }, 1500);\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(\"new entry: \");\r\n    console.log(book);\r\n    if (book.title !== \"\") {\r\n      onAdd(book);\r\n    }\r\n  }, [book]);\r\n\r\n  const onAdd = () => {\r\n    BookService.postBook(book);\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setBook({ title: \"\", authors: \"\", description: \"\", thumbnail: \"\" });\r\n  };\r\n\r\n  const thumbnailFunc = (data) => {\r\n    if (\"imageLinks\" in data) {\r\n      return data.imageLinks.smallThumbnail;\r\n    }\r\n  };\r\n\r\n  const authorsFunc = (data) => {\r\n    if (\"authors\" in data) {\r\n      if (data.authors.join(\", \").length >= 40) {\r\n        return data.authors.join(\", \").slice(0, 40) + \"...\";\r\n      }\r\n      return data.authors.join(\", \");\r\n    }\r\n  };\r\n\r\n  const titleFunc = (data) => {\r\n    if (data.title.length >= 60) {\r\n      return data.title.slice(0, 60) + \"...\";\r\n    }\r\n    return data.title;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <PageTitle>Dashboard</PageTitle>\r\n\r\n      <TableContainer>\r\n        <Table>\r\n          <TableHeader>\r\n            <tr>\r\n              <TableCell>Book Cover</TableCell>\r\n              <TableCell>Description</TableCell>\r\n              <TableCell>Published Date</TableCell>\r\n              <TableCell>Add to list(s)?</TableCell>\r\n            </tr>\r\n          </TableHeader>\r\n          <TableBody>\r\n            {search.map((data, i) => (\r\n              <TableRow key={i}>\r\n                <TableCell>\r\n                  <div className=\"flex items-center text-sm\">\r\n                    <img\r\n                      className=\"hidden mr-3 md:block\"\r\n                      src={thumbnailFunc(data.volumeInfo)}\r\n                      alt=\"\"\r\n                    />\r\n                  </div>\r\n                </TableCell>\r\n                <TableCell>\r\n                  <p className=\"font-semibold\">{titleFunc(data.volumeInfo)}</p>\r\n                  <p className=\"text-sm\">{authorsFunc(data.volumeInfo)}</p>\r\n                  <br />\r\n                  <div style={{ width: \"600px\", whiteSpace: \"pre-wrap\" }}>\r\n                    <p className=\"text-xs text-gray-600 dark:text-gray-400\">\r\n                      {data.volumeInfo.description?.slice(0, 500) +\r\n                        (data.volumeInfo.description?.length >= 500\r\n                          ? \"...\"\r\n                          : \" \")}\r\n                    </p>\r\n                  </div>\r\n                </TableCell>\r\n                <TableCell>\r\n                  <Badge type={user.status}>\r\n                    {data.volumeInfo.publishedDate}\r\n                  </Badge>\r\n                </TableCell>\r\n                <TableCell>\r\n                  <button\r\n                    className=\"bg-purple-400 hover:bg-blue-700 text-white font-bold py-1 px-4 rounded-full\"\r\n                    onClick={() => {\r\n                      addClick(data);\r\n                    }}\r\n                  >\r\n                    Add\r\n                  </button>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n        <TableFooter>\r\n          <Pagination\r\n            totalResults={totalResults}\r\n            resultsPerPage={resultsPerPage}\r\n            label=\"Table navigation\"\r\n            onChange={onPageChange}\r\n          />\r\n        </TableFooter>\r\n      </TableContainer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n","import React from \"react\";\r\n\r\nfunction PageTitle({ children }) {\r\n  return (\r\n    <h1 className=\"my-6 text-2xl font-semibold text-gray-700 dark:text-gray-200\">\r\n      {children}\r\n    </h1>\r\n  );\r\n}\r\n\r\nexport default PageTitle;\r\n","export default {\r\n  getBooks: () => {\r\n    return fetch(\"/user/books\").then((response) => {\r\n      if (response.status != 401) {\r\n        return response.json().then((data) => {\r\n          return data;\r\n        });\r\n      } else return { message: { msgBody: \"Unauthorized\" }, msgError: true };\r\n    });\r\n  },\r\n  postBook: (book) => {\r\n    return fetch(\"/user/book\", {\r\n      method: \"post\",\r\n      body: JSON.stringify(book),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    }).then((response) => {\r\n      if (response.status != 401) {\r\n        return response.json().then((data) => {\r\n          return data;\r\n        });\r\n      } else return { message: { msgBody: \"Unauthorized\" }, msgError: true };\r\n    });\r\n  },\r\n  deleteBook: (bookID) => {\r\n    return fetch(\"/user/test/\" + bookID, {\r\n      method: \"delete\",\r\n    }).then((response) => {\r\n      if (response.status != 401) {\r\n        return response.json().then((data) => {\r\n          return data;\r\n        });\r\n      } else return { message: { msgBody: \"Unauthorized\" }, msgError: true };\r\n    });\r\n  },\r\n};\r\n"],"sourceRoot":""}