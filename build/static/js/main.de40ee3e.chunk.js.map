{"version":3,"sources":["context/AuthContext.js","context/SearchContext.js","context/SidebarContext.js","Services/AuthService.js","components/ThemedSuspense.js","components/AccessibleNavigationAnnouncer.js","App.js","index.js"],"names":["AuthContext","createContext","children","useState","user","setUser","isAuthenticated","setIsAuthenticated","isLoaded","setIsLoaded","useEffect","AuthService","then","data","Provider","value","SearchContext","SearchProvider","props","search","setSearch","SidebarContext","React","SidebarProvider","isSidebarOpen","setIsSidebarOpen","toggleSidebar","closeSidebar","useMemo","login","fetch","method","body","JSON","stringify","headers","res","json","register","logout","status","username","role","ThemedSuspense","className","AccessibleNavigationAnnouncer","message","setMessage","location","useLocation","pathname","slice","setTimeout","aria-live","aria-atomic","Layout","lazy","Login","CreateAccount","ForgotPassword","App","exact","from","to","path","component","ReactDOM","render","fallback","usePreferences","document","getElementById"],"mappings":"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","file":"static/js/main.de40ee3e.chunk.js","sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\r\nimport AuthService from \"../Services/AuthService\";\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport default ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n\r\n  useEffect(() => {\r\n    AuthService.isAuthenticated().then((data) => {\r\n      setUser(data.user);\r\n      setIsAuthenticated(data.isAuthenticated);\r\n      setIsLoaded(true);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {!isLoaded ? (\r\n        <h1>Loading</h1>\r\n      ) : (\r\n        <AuthContext.Provider\r\n          value={{ user, setUser, isAuthenticated, setIsAuthenticated }}\r\n        >\r\n          {children}\r\n        </AuthContext.Provider>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React, { createContext, useState } from \"react\";\r\n\r\nexport const SearchContext = createContext();\r\n\r\nexport const SearchProvider = (props) => {\r\n  const [search, setSearch] = useState([]);\r\n  return (\r\n    <SearchContext.Provider value={[search, setSearch]}>\r\n      {props.children}\r\n    </SearchContext.Provider>\r\n  );\r\n};\r\n","import React, { useState, useMemo } from 'react'\r\n\r\n// create context\r\nexport const SidebarContext = React.createContext()\r\n\r\nexport const SidebarProvider = ({ children }) => {\r\n  const [isSidebarOpen, setIsSidebarOpen] = useState(false)\r\n\r\n  function toggleSidebar() {\r\n    setIsSidebarOpen(!isSidebarOpen)\r\n  }\r\n\r\n  function closeSidebar() {\r\n    setIsSidebarOpen(false)\r\n  }\r\n\r\n  const value = useMemo(\r\n    () => ({\r\n      isSidebarOpen,\r\n      toggleSidebar,\r\n      closeSidebar,\r\n    }),\r\n    [isSidebarOpen]\r\n  )\r\n\r\n  return <SidebarContext.Provider value={value}>{children}</SidebarContext.Provider>\r\n}\r\n","export default {\r\n  login: (user) => {\r\n    return fetch(\"/user/login\", {\r\n      method: \"post\",\r\n      body: JSON.stringify(user),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => data);\r\n  },\r\n  register: (user) => {\r\n    return fetch(\"/user/register\", {\r\n      method: \"post\",\r\n      body: JSON.stringify(user),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => data);\r\n  },\r\n  logout: () => {\r\n    return fetch(\"/user/logout\")\r\n      .then((res) => res.json())\r\n      .then((data) => data);\r\n  },\r\n  isAuthenticated: () => {\r\n    return fetch(\"/user/authenticated\").then((res) => {\r\n      if (res.status !== 401) {\r\n        return res.json().then((data) => data);\r\n      } else {\r\n        return { isAuthenticated: false, user: { username: \"\", role: \"\" } };\r\n      }\r\n    });\r\n  },\r\n};\r\n","import React from \"react\";\r\n\r\nfunction ThemedSuspense() {\r\n  return (\r\n    <div className=\"w-full h-screen p-6 text-lg font-medium text-gray-600 dark:text-gray-400 dark:bg-gray-900\">\r\n      Loading...\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ThemedSuspense;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nfunction AccessibleNavigationAnnouncer() {\r\n  const [message, setMessage] = useState(\"\");\r\n  const location = useLocation();\r\n\r\n  useEffect(() => {\r\n    // ignore the /\r\n    if (location.pathname.slice(1)) {\r\n      // make sure navigation has occurred and screen reader is ready\r\n      setTimeout(\r\n        () => setMessage(`Navigated to ${location.pathname.slice(1)} page.`),\r\n        500\r\n      );\r\n    } else {\r\n      setMessage(\"\");\r\n    }\r\n  }, [location]);\r\n\r\n  return (\r\n    <span\r\n      className=\"sr-only\"\r\n      role=\"status\"\r\n      aria-live=\"polite\"\r\n      aria-atomic=\"true\"\r\n    >\r\n      {message}\r\n    </span>\r\n  );\r\n}\r\n\r\nexport default AccessibleNavigationAnnouncer;\r\n","import React, { lazy } from \"react\";\r\nimport {\r\n  HashRouter as Router, // had to switch BrowserRouter\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport AccessibleNavigationAnnouncer from \"./components/AccessibleNavigationAnnouncer\";\r\n\r\nconst Layout = lazy(() => import(\"./containers/Layout\"));\r\nconst Login = lazy(() => import(\"./pages/Login\"));\r\nconst CreateAccount = lazy(() => import(\"./pages/CreateAccount\"));\r\nconst ForgotPassword = lazy(() => import(\"./pages/ForgotPassword\"));\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Router>\r\n        <AccessibleNavigationAnnouncer />\r\n        <Switch>\r\n          <Redirect exact from=\"/\" to=\"/login\" />\r\n          <Route path=\"/login\" component={Login} />\r\n          <Route path=\"/create-account\" component={CreateAccount} />\r\n          <Route path=\"/forgot-password\" component={ForgotPassword} />\r\n\r\n          <Route path=\"/app\" component={Layout} />\r\n        </Switch>\r\n      </Router>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React, { Suspense } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./assets/css/tailwind.output.css\";\r\nimport App from \"./App\";\r\nimport { SidebarProvider } from \"./context/SidebarContext\";\r\nimport ThemedSuspense from \"./components/ThemedSuspense\";\r\nimport { Windmill } from \"@windmill/react-ui\";\r\nimport AuthProvider from \"./context/AuthContext\";\r\nimport { SearchProvider } from \"./context/SearchContext\";\r\n\r\nReactDOM.render(\r\n  <SearchProvider>\r\n    <AuthProvider>\r\n      <SidebarProvider>\r\n        <Suspense fallback={<ThemedSuspense />}>\r\n          <Windmill usePreferences>\r\n            <App />\r\n          </Windmill>\r\n        </Suspense>\r\n      </SidebarProvider>\r\n    </AuthProvider>\r\n  </SearchProvider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}